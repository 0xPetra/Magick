import PubSub from 'pubsub-js';
declare type PubSubData = Record<string, any> | string | any[];
declare type PubSubContext = {
    publish: (event: string, data?: PubSubData) => void;
    subscribe: (event: string, callback: Function) => Function;
    PubSub: typeof PubSub;
    events: Record<string, any>;
};
export declare const usePubSub: () => PubSubContext;
export { PubSub };
export declare const events: {
    ADD_SUBSPELL: string;
    UPDATE_SUBSPELL: string;
    DELETE_SUBSPELL: string;
    $SUBSPELL_UPDATED: (spellId: any) => string;
    $TRIGGER: (tabId: any, nodeId: any) => string;
    $PLAYTEST_INPUT: (tabId: any) => string;
    $PLAYTEST_PRINT: (tabId: any) => string;
    $DEBUG_PRINT: (tabId: any) => string;
    $DEBUG_INPUT: (tabId: any) => string;
    $INSPECTOR_SET: (tabId: any) => string;
    $TEXT_EDITOR_SET: (tabId: any) => string;
    $TEXT_EDITOR_CLEAR: (tabId: any) => string;
    $CLOSE_EDITOR: (tabId: any) => string;
    $NODE_SET: (tabId: any, nodeId: any) => string;
    $SAVE_SPELL: (tabId: any) => string;
    $SAVE_SPELL_DIFF: (tabId: any) => string;
    $CREATE_SETTINGS_WINDOW: (tabId: any) => string;
    $CREATE_STATE_MANAGER: (tabId: any) => string;
    $CREATE_PLAYTEST: (tabId: any) => string;
    $CREATE_INSPECTOR: (tabId: any) => string;
    $CREATE_TEXT_EDITOR: (tabId: any) => string;
    $CREATE_ENT_MANAGER: (tabId: any) => string;
    $CREATE_VIDEO_TRANSCRIPTION: (tabId: any) => string;
    $CREATE_CALENDAR_TAB: (tabId: any) => string;
    $CREATE_SEARCH_CORPUS: (tabId: any) => string;
    $CREATE_DEBUG_CONSOLE: (tabId: any) => string;
    $CREATE_CONSOLE: (tabId: any) => string;
    $CREATE_EVENT_MANAGER: (tabId: any) => string;
    $SERIALIZE: (tabId: any) => string;
    $PROCESS: (tabId: any) => string;
    $EXPORT: (tabId: any) => string;
    $UNDO: (tabId: any) => string;
    $REDO: (tabId: any) => string;
    $DELETE: (tabId: any) => string;
};
declare const PubSubProvider: ({ children }: {
    children: any;
}) => JSX.Element;
export default PubSubProvider;
